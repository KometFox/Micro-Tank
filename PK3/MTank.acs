//ACS code credit: Sgt. Mark IV
#library "MTank"
//#include "zcommon.acs"
#include "zcommon/gzdoom.acs"
int vehiclepreviousbaseangle;

script "MTACS_Stuff" (VOID) NET
{
 delay(1);
 delay(5);
 SetActorAngle (0, GetActorAngle (261));
 Thing_Move(0, 261, 1);
 vehiclepreviousbaseangle = CheckActorInventory(261, "TankBaseDirection");
 SetUserVariable(0, "user_tankbasedirection", vehiclepreviousbaseangle);
 delay(1);
}

//Actual Vehicle Control

script "MTACS_Chassis" ENTER
{
 int buttons;
 //int chassisangle = GetUserCVAR(0, "user_chassisangle");	
 int chassisangle = 270;

	//I don't think there is a better way to do this with ACS
	while (TRUE)
	{
		buttons = GetPlayerInput(-1, INPUT_BUTTONS);
		
		if (!CheckInventory("ImCrafting") & !CheckInventory("MT_MorphVCrewToken"))
		{
		
		if (buttons & BT_FORWARD)
			{
				ThrustThing(ACS_NamedExecuteWithResult("MT_GetVehicleRotation", 0) * 256 / 360, 1, 0);
				GiveInventory("Accelerate", 1);
			}

		if (buttons & BT_BACK)
			{
				ThrustThing(ACS_NamedExecuteWithResult("MT_GetVehicleRotation", 0) * 256 / 360 + 128, 1, 0);
				GiveInventory("Reverse", 1);
			}
	

		if ( (buttons & BT_MOVELEFT) && (buttons & BT_BACK) )
			{
				GiveInventory("TurnLeft", 1);
				chassisangle -= 4;
				SetUserCVAR(0, "user_chassisangle", chassisangle); 
				ACS_NamedExecuteWithResult("MT_SetVehicleRotation", chassisangle);
			}
			
		else if (buttons & BT_MOVELEFT)
			{
				//log(s: "TURN LEFT");
				GiveInventory("TurnLeft", 1);
				chassisangle += 4;
				SetUserCVAR(0, "user_chassisangle", chassisangle); 
				ACS_NamedExecuteWithResult("MT_SetVehicleRotation", chassisangle);
			}


		if ( (buttons & BT_MOVERIGHT) && (buttons & BT_BACK) )
			{
				GiveInventory("TurnLeft", 1);
				chassisangle += 4;
				SetUserCVAR(0, "user_chassisangle", chassisangle); 
				ACS_NamedExecuteWithResult("MT_SetVehicleRotation", chassisangle);
			}
 
		else if (buttons & BT_MOVERIGHT)
			{
				//log(s: "TURN RIGHT");
				GiveInventory("TurnRight", 1);
				chassisangle -= 4;
				SetUserCVAR(0, "user_chassisangle", chassisangle);
				ACS_NamedExecuteWithResult("MT_SetVehicleRotation", chassisangle);
			}

		if (chassisangle <= 0) { chassisangle = 360; }
		else if (chassisangle >= 360) { chassisangle = 0; }

		//ACS_NamedExecuteWithResult("MT_SetVehicleRotation", chassisangle);		
		//log(d: chassisangle);
		//log(d: GetUserCVAR(0, "user_chassisangle"));
		}
		
//------------------------------------------------------------------------------
//Chase
//------------------------------------------------------------------------------
	//Chase cheat is on 
		if (CheckInventory("MT_ChaseCameraToken")) 
			{	

				setfont("TNHSA0");
				hudmessage(s:"A"; HUDMSG_PLAIN, 0, CR_UNTRANSLATED, 0.5, 0.57, 1.0);		
				SetCVAR("chase", True);
			}

		else if (!CheckInventory("MT_ChaseCameraToken"))
			{
				hudmessage(s:""; HUDMSG_PLAIN, 0, CR_UNTRANSLATED, 0.5, 0.57, 1.0);
				SetCVAR("chase", False);
			}

		delay(1);		
		TakeInventory("Accelerate", 1);
		TakeInventory("Reverse", 1);
		TakeInventory("TurnRight", 1); 
		TakeInventory("TurnLeft", 1);	

//------------------------------------------------------------------------------
//Cannon timer
//------------------------------------------------------------------------------

	}
}

